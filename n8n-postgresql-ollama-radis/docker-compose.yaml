services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    environment:
      - SERVICE_FQDN_N8N_5678
      - 'N8N_EDITOR_BASE_URL=${SERVICE_FQDN_N8N}'
      - 'WEBHOOK_URL=${SERVICE_FQDN_N8N}'
      - 'N8N_HOST=${SERVICE_URL_N8N}'
      - 'GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Europe/Berlin}'
      - 'TZ=${TZ:-Europe/Berlin}'
      - DB_TYPE=postgresdb
      - N8N_SECURE_COOKIE=false
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}'
      - DB_POSTGRESDB_HOST=postgresql
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=$SERVICE_USER_POSTGRES
      - DB_POSTGRESDB_SCHEMA=public
      - DB_POSTGRESDB_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
      - EXECUTIONS_TIMEOUT=1800
      - EXECUTIONS_TIMEOUT_MAX=3600
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
    volumes:
      - 'n8n-data:/home/node/.n8n'
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - 'wget -qO- http://127.0.0.1:5678/'
      interval: 5s
      timeout: 20s
      retries: 10
  postgresql:
    image: 'postgres:16-alpine'
    volumes:
      - 'postgresql-data:/var/lib/postgresql/data'
    environment:
      - POSTGRES_USER=$SERVICE_USER_POSTGRES
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - 'POSTGRES_DB=${POSTGRES_DB:-n8n}'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10
  ollama:
    image: 'ollama/ollama:latest'
    container_name: ollama
    volumes:
      - 'ollama_storage:/root/.ollama'
    environment:
      - SERVICE_FQDN_OLLAMA_11434
      - OLLAMA_KEEP_ALIVE=5m
      - 'OLLAMA_ORIGINS=*'
      - OLLAMA_MAX_LOADED_MODELS=2
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_FLASH_ATTENTION=1
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    extra_hosts:
      - 'registry.ollama.ai:104.21.15.34'
      - 'ollama.ai:104.21.15.34'
    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - ollama
        - list
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 60s
  redis:
    image: 'redis:7-alpine'
    container_name: redis
    restart: unless-stopped
    volumes:
      - 'redis_storage:/data'
    command: 'redis-server --appendonly yes'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  open-webui:
    image: 'ghcr.io/open-webui/open-webui:main'
    container_name: webui_ollama
    environment:
      - SERVICE_FQDN_OPENWEBUI
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-ollama-webui-secret}'
      - WEBUI_AUTH=false
    volumes:
      - 'open-webui-data:/app/backend/data'
    depends_on:
      - ollama
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -f http://127.0.0.1:8080/health || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
